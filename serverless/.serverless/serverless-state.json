{
  "service": {
    "service": "frontend-ecs-services",
    "serviceObject": {
      "name": "frontend-ecs-services"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "python3.6",
      "region": "eu-central-1",
      "environment": {
        "environment": "pre",
        "bucket": "lazzaro-ongs-template-artifacts-pre",
        "account_id": "648410456371",
        "ddbTable": "frontend-ddb-client-pre",
        "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ClientLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/frontend-ecs-services-pre-client"
            }
          },
          "CreateserviceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/frontend-ecs-services-pre-createservice"
            }
          },
          "RemoveserviceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/frontend-ecs-services-pre-removeservice"
            }
          },
          "TestserviceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/frontend-ecs-services-pre-testservice"
            }
          },
          "ClientLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/frontend-ecs-services/pre/1624599335309-2021-06-25T05:35:35.309Z/frontend-ecs-services.zip"
              },
              "FunctionName": "frontend-ecs-services-pre-client",
              "Handler": "wsgi_handler.handler",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::648410456371:role/frontend-client-gateway-role-pre",
              "Runtime": "python3.6",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "environment": "pre",
                  "bucket": "lazzaro-ongs-template-artifacts-pre",
                  "account_id": "648410456371",
                  "ddbTable": "frontend-ddb-client-pre",
                  "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
                }
              }
            },
            "DependsOn": [
              "ClientLogGroup"
            ]
          },
          "ClientLambdaVersionDm0Mdr6KVJMoU5TQj6BWLfWS9jlJ6PNzghEVTa42xg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ClientLambdaFunction"
              },
              "CodeSha256": "dAXjPCVInmFU2RMy1ExgeL19V+2PNs1HsUHVlY9gtRE="
            }
          },
          "CreateserviceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/frontend-ecs-services/pre/1624599335309-2021-06-25T05:35:35.309Z/frontend-ecs-services.zip"
              },
              "FunctionName": "frontend-ecs-services-pre-createservice",
              "Handler": "artifacts.handler",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::648410456371:role/frontend-create-lambda-service-role-pre",
              "Runtime": "python3.6",
              "Timeout": 60,
              "Environment": {
                "Variables": {
                  "environment": "pre",
                  "bucket": "lazzaro-ongs-template-artifacts-pre",
                  "account_id": "648410456371",
                  "ddbTable": "frontend-ddb-client-pre",
                  "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
                }
              }
            },
            "DependsOn": [
              "CreateserviceLogGroup"
            ]
          },
          "CreateserviceLambdaVersionJnO6AHxt0UTYze1va59lB5L6g2PpZOlTPm4VJS0BQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateserviceLambdaFunction"
              },
              "CodeSha256": "dAXjPCVInmFU2RMy1ExgeL19V+2PNs1HsUHVlY9gtRE="
            }
          },
          "RemoveserviceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/frontend-ecs-services/pre/1624599335309-2021-06-25T05:35:35.309Z/frontend-ecs-services.zip"
              },
              "FunctionName": "frontend-ecs-services-pre-removeservice",
              "Handler": "stream.handler",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::648410456371:role/frontend-delete-lambda-service-role-pre",
              "Runtime": "python3.6",
              "Timeout": 45,
              "Environment": {
                "Variables": {
                  "environment": "pre",
                  "bucket": "lazzaro-ongs-template-artifacts-pre",
                  "account_id": "648410456371",
                  "ddbTable": "frontend-ddb-client-pre",
                  "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
                }
              }
            },
            "DependsOn": [
              "RemoveserviceLogGroup"
            ]
          },
          "RemoveserviceLambdaVersionssjYvlV9N8fCMPABu9oyfdONUhY4sHcDOhzvW7Y3l0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RemoveserviceLambdaFunction"
              },
              "CodeSha256": "dAXjPCVInmFU2RMy1ExgeL19V+2PNs1HsUHVlY9gtRE="
            }
          },
          "TestserviceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/frontend-ecs-services/pre/1624599335309-2021-06-25T05:35:35.309Z/frontend-ecs-services.zip"
              },
              "FunctionName": "frontend-ecs-services-pre-testservice",
              "Handler": "testdeploy.handler",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::648410456371:role/front_test_delete_soon",
              "Runtime": "python3.6",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "environment": "pre",
                  "bucket": "lazzaro-ongs-template-artifacts-pre",
                  "account_id": "648410456371",
                  "ddbTable": "frontend-ddb-client-pre",
                  "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
                }
              }
            },
            "DependsOn": [
              "TestserviceLogGroup"
            ]
          },
          "TestserviceLambdaVersioncaB2LneyHgzVerFD6eP5Xam4wD045420G4iP0wrg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TestserviceLambdaFunction"
              },
              "CodeSha256": "dAXjPCVInmFU2RMy1ExgeL19V+2PNs1HsUHVlY9gtRE="
            }
          },
          "S3BucketLazzaroongstemplateartifactspre": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "lazzaro-ongs-template-artifacts-pre",
              "NotificationConfiguration": {
                "LambdaConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:Put",
                    "Function": {
                      "Fn::GetAtt": [
                        "CreateserviceLambdaFunction",
                        "Arn"
                      ]
                    }
                  }
                ]
              }
            },
            "DependsOn": [
              "CreateserviceLambdaPermissionLazzaroongstemplateartifactspreS3"
            ]
          },
          "CreateserviceLambdaPermissionLazzaroongstemplateartifactspreS3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateserviceLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::lazzaro-ongs-template-artifacts-pre"
                  ]
                ]
              },
              "SourceAccount": {
                "Ref": "AWS::AccountId"
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "pre-frontend-ecs-services",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceCreateclient": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "createclient",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceRemoveclient": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "removeclient",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCreateclientPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCreateclient"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ClientLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodRemoveclientDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRemoveclient"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ClientLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1624599321297": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "pre"
            },
            "DependsOn": [
              "ApiGatewayMethodCreateclientPost",
              "ApiGatewayMethodRemoveclientDelete"
            ]
          },
          "ClientLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ClientLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ClientLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ClientLambdaVersionDm0Mdr6KVJMoU5TQj6BWLfWS9jlJ6PNzghEVTa42xg"
            }
          },
          "CreateserviceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateserviceLambdaVersionJnO6AHxt0UTYze1va59lB5L6g2PpZOlTPm4VJS0BQ"
            }
          },
          "RemoveserviceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RemoveserviceLambdaVersionssjYvlV9N8fCMPABu9oyfdONUhY4sHcDOhzvW7Y3l0"
            }
          },
          "TestserviceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TestserviceLambdaVersioncaB2LneyHgzVerFD6eP5Xam4wD045420G4iP0wrg"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/pre"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "wsgi": {
        "app": "client.app",
        "packRequirements": false
      },
      "pythonRequirements": {
        "dockerizePip": "non-linux"
      }
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-wsgi",
      "serverless-dotenv-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "client": {
        "handler": "wsgi_handler.handler",
        "role": "arn:aws:iam::648410456371:role/frontend-client-gateway-role-pre",
        "events": [
          {
            "http": {
              "path": "createclient",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "removeclient",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "frontend-ecs-services-pre-client",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.6",
        "vpc": {},
        "versionLogicalId": "ClientLambdaVersionDm0Mdr6KVJMoU5TQj6BWLfWS9jlJ6PNzghEVTa42xg"
      },
      "createservice": {
        "handler": "artifacts.handler",
        "role": "arn:aws:iam::648410456371:role/frontend-create-lambda-service-role-pre",
        "timeout": 60,
        "events": [
          {
            "s3": {
              "bucket": "lazzaro-ongs-template-artifacts-pre",
              "event": "s3:ObjectCreated:Put"
            }
          }
        ],
        "name": "frontend-ecs-services-pre-createservice",
        "package": {},
        "memory": 1024,
        "runtime": "python3.6",
        "vpc": {},
        "versionLogicalId": "CreateserviceLambdaVersionJnO6AHxt0UTYze1va59lB5L6g2PpZOlTPm4VJS0BQ"
      },
      "removeservice": {
        "handler": "stream.handler",
        "role": "arn:aws:iam::648410456371:role/frontend-delete-lambda-service-role-pre",
        "timeout": 45,
        "events": [],
        "name": "frontend-ecs-services-pre-removeservice",
        "package": {},
        "memory": 1024,
        "runtime": "python3.6",
        "vpc": {},
        "versionLogicalId": "RemoveserviceLambdaVersionssjYvlV9N8fCMPABu9oyfdONUhY4sHcDOhzvW7Y3l0"
      },
      "testservice": {
        "handler": "testdeploy.handler",
        "role": "arn:aws:iam::648410456371:role/front_test_delete_soon",
        "timeout": 30,
        "events": [],
        "name": "frontend-ecs-services-pre-testservice",
        "package": {},
        "memory": 1024,
        "runtime": "python3.6",
        "vpc": {},
        "versionLogicalId": "TestserviceLambdaVersioncaB2LneyHgzVerFD6eP5Xam4wD045420G4iP0wrg"
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/elchoco/development/web/lazzaro/lazzaro_infrastructure/serverless/.serverless/frontend-ecs-services.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/frontend-ecs-services/pre/1624599335309-2021-06-25T05:35:35.309Z",
    "artifact": "frontend-ecs-services.zip"
  }
}