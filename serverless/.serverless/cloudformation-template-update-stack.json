{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ClientLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/frontend-ecs-services-pre-client"
      }
    },
    "CreateserviceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/frontend-ecs-services-pre-createservice"
      }
    },
    "RemoveserviceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/frontend-ecs-services-pre-removeservice"
      }
    },
    "TestserviceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/frontend-ecs-services-pre-testservice"
      }
    },
    "ClientLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/frontend-ecs-services/pre/1624551338201-2021-06-24T16:15:38.201Z/frontend-ecs-services.zip"
        },
        "FunctionName": "frontend-ecs-services-pre-client",
        "Handler": "wsgi_handler.handler",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::648410456371:role/frontend-client-gateway-role-pre",
        "Runtime": "python3.6",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "environment": "pre",
            "bucket": "lazzaro-ongs-template-artifacts-pre",
            "account_id": "648410456371",
            "ddbTable": "frontend-ddb-client-pre",
            "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
          }
        }
      },
      "DependsOn": [
        "ClientLogGroup"
      ]
    },
    "ClientLambdaVersionGew4ndzy10fk513vES0qh7tSDVsFQMtAp7SODHtlxSE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ClientLambdaFunction"
        },
        "CodeSha256": "878xgLLVhu0K6IKUSK34AMo4z75vFgHennCxhM8ehUA="
      }
    },
    "CreateserviceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/frontend-ecs-services/pre/1624551338201-2021-06-24T16:15:38.201Z/frontend-ecs-services.zip"
        },
        "FunctionName": "frontend-ecs-services-pre-createservice",
        "Handler": "artifacts.handler",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::648410456371:role/frontend-create-lambda-service-role-pre",
        "Runtime": "python3.6",
        "Timeout": 60,
        "Environment": {
          "Variables": {
            "environment": "pre",
            "bucket": "lazzaro-ongs-template-artifacts-pre",
            "account_id": "648410456371",
            "ddbTable": "frontend-ddb-client-pre",
            "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
          }
        }
      },
      "DependsOn": [
        "CreateserviceLogGroup"
      ]
    },
    "CreateserviceLambdaVersionpxRO1We8DsUXVUfh1TsQewem3Gn0kxySiUTEpCTIS7c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateserviceLambdaFunction"
        },
        "CodeSha256": "878xgLLVhu0K6IKUSK34AMo4z75vFgHennCxhM8ehUA="
      }
    },
    "RemoveserviceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/frontend-ecs-services/pre/1624551338201-2021-06-24T16:15:38.201Z/frontend-ecs-services.zip"
        },
        "FunctionName": "frontend-ecs-services-pre-removeservice",
        "Handler": "stream.handler",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::648410456371:role/frontend-delete-lambda-service-role-pre",
        "Runtime": "python3.6",
        "Timeout": 45,
        "Environment": {
          "Variables": {
            "environment": "pre",
            "bucket": "lazzaro-ongs-template-artifacts-pre",
            "account_id": "648410456371",
            "ddbTable": "frontend-ddb-client-pre",
            "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
          }
        }
      },
      "DependsOn": [
        "RemoveserviceLogGroup"
      ]
    },
    "RemoveserviceLambdaVersionAMc7EXwdppPY96tCQI4ey2gVzyNmrIOoEjEvt44o": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RemoveserviceLambdaFunction"
        },
        "CodeSha256": "878xgLLVhu0K6IKUSK34AMo4z75vFgHennCxhM8ehUA="
      }
    },
    "TestserviceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/frontend-ecs-services/pre/1624551338201-2021-06-24T16:15:38.201Z/frontend-ecs-services.zip"
        },
        "FunctionName": "frontend-ecs-services-pre-testservice",
        "Handler": "testdeploy.handler",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::648410456371:role/front_test_delete_soon",
        "Runtime": "python3.6",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "environment": "pre",
            "bucket": "lazzaro-ongs-template-artifacts-pre",
            "account_id": "648410456371",
            "ddbTable": "frontend-ddb-client-pre",
            "r53HostedZoneId": "Z05961833L2QBW4GTOR3X"
          }
        }
      },
      "DependsOn": [
        "TestserviceLogGroup"
      ]
    },
    "TestserviceLambdaVersionWXrCCbuAbYi11IQnaJewmRWyTV8OiiUdBx3vMeI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "TestserviceLambdaFunction"
        },
        "CodeSha256": "878xgLLVhu0K6IKUSK34AMo4z75vFgHennCxhM8ehUA="
      }
    },
    "S3BucketLazzaroongstemplateartifactspre": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "lazzaro-ongs-template-artifacts-pre",
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event": "s3:ObjectCreated:Put",
              "Function": {
                "Fn::GetAtt": [
                  "CreateserviceLambdaFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "CreateserviceLambdaPermissionLazzaroongstemplateartifactspreS3"
      ]
    },
    "CreateserviceLambdaPermissionLazzaroongstemplateartifactspreS3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateserviceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "s3.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":s3:::lazzaro-ongs-template-artifacts-pre"
            ]
          ]
        },
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "pre-frontend-ecs-services",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceCreateclient": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "createclient",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceRemoveclient": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "removeclient",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodCreateclientPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCreateclient"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ClientLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodRemoveclientDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRemoveclient"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ClientLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1624551324461": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "pre"
      },
      "DependsOn": [
        "ApiGatewayMethodCreateclientPost",
        "ApiGatewayMethodRemoveclientDelete"
      ]
    },
    "ClientLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ClientLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ClientLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ClientLambdaVersionGew4ndzy10fk513vES0qh7tSDVsFQMtAp7SODHtlxSE"
      }
    },
    "CreateserviceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateserviceLambdaVersionpxRO1We8DsUXVUfh1TsQewem3Gn0kxySiUTEpCTIS7c"
      }
    },
    "RemoveserviceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RemoveserviceLambdaVersionAMc7EXwdppPY96tCQI4ey2gVzyNmrIOoEjEvt44o"
      }
    },
    "TestserviceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "TestserviceLambdaVersionWXrCCbuAbYi11IQnaJewmRWyTV8OiiUdBx3vMeI"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/pre"
          ]
        ]
      }
    }
  }
}